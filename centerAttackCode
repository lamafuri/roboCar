#define in1 9
#define in2 10
#define in3 11
#define in4 12
#define ENA 5
#define ENB 6

// #define motorSpeed 170
#define motorSpeed 140

#include <Servo.h>
Servo scoopLeft;
Servo scoopRight;

float speed_cm_per_s = 21.14;
void setup() {
  Serial.begin(9600);
  pinMode(in1, OUTPUT); pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT); pinMode(in4, OUTPUT);
  pinMode(ENA, OUTPUT); pinMode(ENB, OUTPUT);

  analogWrite(ENA, motorSpeed);  //67cm/3sec => 22.333 cm / sec 
  analogWrite(ENB, motorSpeed);
  
  scoopLeft.attach(2);   // Left servo motor
  scoopRight.attach(3);  // Right servo motor

  delay(1000);//to give a good start 
  // openScoop(300);
  moveToTopRight(); 
  moveToHospital();
  test();



  
}

void loop() {}

// Movement Functions
void moveToTopRight() {
  turnRight(28);// for 11.3V
  forward(87.4);
  turnLeft(170);
  forward(64);//30
  //41+23
  // delay(1000);
}
void scoopPatient() {
  // closeScoop(1000);
  forward(10);//11
  // delay(1000);
  // openScoop(1000);
  forward(21);
  // closeScoop(1000);
  forward(10);
  // openScoop(500);
 // Simulate scoop time
}

void moveToHospital() {
   // Simulate drop-off
  //  turnRight(15);
   forward(46);
}

void returnToCenter() {
 
}

void forward(float distance_cm) {
  float time_needed = (distance_cm / speed_cm_per_s) * 1000; // convert to ms
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
  delay((int)time_needed);
  stop();
}

void backward(float distance_cm) {
  float time_needed = (distance_cm / speed_cm_per_s) * 1000; // convert to ms
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
  delay((int)time_needed);
  stop();
}

void stop() {
  digitalWrite(in1, LOW); digitalWrite(in2, LOW);
  digitalWrite(in3, LOW); digitalWrite(in4, LOW);
}

void test(){
  backward(105);
  delay(1000);
  turnRight(45);
  delay(1000);
  forward(85);
  delay(1000);
  turnLeft(90);
  delay(1000);
  forward(27);
  delay(1000);

}

void turnRight(int degrees) {
  int duration = degrees * 5.56;  // Time to rotate in milliseconds
  digitalWrite(in1, HIGH);  // Left motor forward
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);  // Right motor forward
  digitalWrite(in4, HIGH);
  delay(duration);
  stop();
}

void turnLeft(int degrees) {
  int duration = degrees * 5.56;
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);  // Left motor backward
  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);  // Right motor backward
  delay(duration);
  stop();
}

// Task Functions

void openScoop(int delayTime) {
  // Left goes to 0°, Right to 180°
  scoopLeft.write(0);
  scoopRight.write(90);
  Serial.write("opened");
  delay(delayTime);
}

void closeScoop(int delayTime) {
  // Both move to center to grip (example: 90°)
  scoopLeft.write(90);
  scoopRight.write(190);
  Serial.write("closed");
  delay(delayTime);
}
